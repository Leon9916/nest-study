// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(50)
  password   String   @db.VarChar(50)
  email      String   @db.VarChar(50)
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  exam    Exam[]
  answers Answer[]
}

model Exam {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(50)
  isPublish  Boolean  @default(false)
  isDelete   Boolean  @default(false)
  content    String   @db.Text
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  createUser   User? @relation(fields: [createUserId], references: [id])
  createUserId Int?

  answers Answer[]
}

model Answer {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  score      Int
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  answerer   User? @relation(fields: [answererId], references: [id])
  answererId Int?

  exam   Exam? @relation(fields: [examId], references: [id])
  examId Int?
}
